<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:si="http://www.springframework.org/schema/integration" xmlns:jms="http://www.springframework.org/schema/integration/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
	http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.1.xsd
	http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms-4.1.xsd">
	<jms:inbound-gateway id="jmsInGateway"
		request-destination-name="server.queue" request-channel="inboundChannel"
		reply-channel="outboundChannel" message-converter="xmlMessageConverter"
		connection-factory="jmsConnectionFactory" destination-resolver="myDestinationResolver" />
	<bean id="xmlMessageConverter" class="org.cucina.engine.server.jms.XmlEncoderDecoderConverter" />
	<si:channel id="inboundChannel" />
	<si:channel id="outboundChannelConversation" />
	<si:header-enricher input-channel="outboundChannelConversation"
		output-channel="outboundChannel">
		<si:header name="conversationId" expression="@conversationContext.getConversationId()" />
	</si:header-enricher>
	<si:channel id="outboundChannel" />
	<si:channel id="unroutableChannel" />
	<si:logging-channel-adapter channel="unroutableChannel"
		level="WARN" logger-name="Unroutable.Request" />
	<si:payload-type-router input-channel="inboundChannel"
		default-output-channel="unroutableChannel">
		<si:mapping type="org.cucina.engine.server.event.workflow.GetValueEvent"
			channel="getValueChannel" />
		<si:mapping type="org.cucina.engine.server.event.workflow.WorkflowEvent"
			channel="workflowChannel" />
		<si:mapping type="org.cucina.engine.server.event.RegistrationEvent"
			channel="registrationChannel" />
		<si:mapping type="org.cucina.engine.server.event.CompensateEvent"
			channel="compensateChannel" />
	</si:payload-type-router>
	<si:channel id="compensateChannel" />
	<si:service-activator input-channel="compensateChannel"
		output-channel="outboundChannel" ref="compensateHandler" />
	<si:channel id="getValueChannel" />
	<si:service-activator input-channel="getValueChannel"
		output-channel="outboundChannel" ref="messagingWorkflowHandler"
		method="getValue" />

	<si:channel id="workflowChannel" />
	<si:service-activator input-channel="workflowChannel"
		output-channel="outboundChannel" ref="messagingWorkflowHandler"
		method="act" />

	<si:channel id="registrationChannel" />
	<si:service-activator input-channel="registrationChannel"
		expression="@clientRegistry.addRegistration(payload.applicationName, payload.destinationName)" />

	<si:channel id="workflowCallbackChannel" />
	<si:channel id="workflowCallbackReplyChannel" />
	<si:header-enricher input-channel="workflowCallbackChannel"
		output-channel="workflowCallbackChannelT">
		<si:reply-channel ref="workflowCallbackReplyChannel" />
		<si:header name="protocol" ref="registryUrlExtractor"
			method="findProtocol" />
		<si:header name="destinationName" ref="registryUrlExtractor"
			method="findDestinationName" />
		<si:header name="conversationId" expression="@conversationContext.getConversationId()" />
	</si:header-enricher>

	<si:channel id="workflowCallbackChannelT" />
	<si:logging-channel-adapter channel="unsupportedProtocolChannel"
		level="WARN" />
	<si:channel id="unsupportedProtocolChannel" />
	<si:header-value-router input-channel="workflowCallbackChannelT"
		header-name="protocol" default-output-channel="unsupportedProtocolChannel">
		<si:mapping value="jms" channel="workflowCallbackChannelJms" />
	</si:header-value-router>

	<jms:outbound-gateway reply-channel="workflowCallbackReplyChannel"
		request-channel="workflowCallbackChannelJms" message-converter="xmlMessageConverter"
		request-destination-expression="headers.destinationName"
		connection-factory="jmsConnectionFactory" />
</beans>
